- Добавить возможноть запускать GradleTask после создания модуля
- Добавить сохранение логов и отправление их куда-нибудь (в телеграм-бот) в случае ошибок
- Добавить вывод сообщений в Log в hiearchy-api. Сообщения будут выводиться в Event Log.
- Растащить ресурсы по модулям
- Добавить запоминание размеров окошек
- Нивелировать время компиляции скрипта
    ✅ Создать сервис, который асинхронно будет грузить все возможные скрипты.
    - Первая загрузка будет при создании сервиса.
    - После выполнения ModuleAction, будет запускаться таска на скрипте о перезагрузки скрипта.
         Если чел решил повторить скрипт сразу же, то ему придётся немного подождать, пока сервис грузит скрипт.
    - Для форсапдейта будет кнопка напротив уже загруженного скрипта на шаге Selection
    - В настройках добавить количество потоков для загрузки скриптов
    - (Опционально) В настройках загружать новый скрипт только по форсапдейту. Так скрипт загрузится 1 раз в память строкой и будет перезагружаться каждый раз из строки.
        А форсапдейт заапдейтит эту строку из файла
    - (Исследовать) Слушать изменения в файловой системе для перезагрузки скриптов
    - (Обоснование):
        * Скрипты всегда обновлены
        * Время ожидания компиляции мало
        * Нет риска ошибок из-за переиспользования загруженных классов, которые могут возникать при наличии внутреннего состояния (Скрипты как в PHP)
- Чтобы дать возможность не только создавать модули, но и выполнять более простые действия, сделать ModuleAction более настраеваемым:
    ✅ Удалить MODULE_NAME из констант и заставиь сохранять это имя самостоятельно в NameHandler.
    - Так Name превратится в шаг StringInput (мб нескольких). Мб даже тип анкетки делать что-то
    ? Добавть возможность определять шаги Action'а (Name, Structure, Create)
- Настроить цвета под тему. (Разобраться, как работают темы. Брать цвета из темы)
- На экране структуры справа добавить возможность простым спиком (без структуры) задавать поля ввода, чекбоксы, выпадающие списки.
    Для этого нужно новое апи. Поэтому понадобятся шаги:
    - Переименование модуля ui-hierarchy в модуль custom-module-action-api
    - (Возможно) рефакторинг существующих сущностей в апи HierarchyObject (учесть переиспользуемость Attrs)
    - Добавить новое API ListObject (рабочее название)
    - Добавить возможность создавать выделяющие панели
- Добавить возможность создать проект со скриптом. Он просто будет грузиться из github в выбранное место на компе.
    Автоматом будет устанавливаться папка со скриптами из этого проекта

Готово:
✅ Добавить настройки
✅ Сделать экран с выбором скрипта из папки со скрииптами
✅ Поместить в настройки поле с папкой, в которой хранятся скрипты


Отменено:
❌ Сделать экран с вводом имени модуля также настраиваемым через скрипт.
    Причина ❌: не все модули могут иметь делители '-'. Некоторые могут быть названы в PascalCase. Это делает настраиваемость невозможной
        В любом случае, экран с делителем для qpay всё ещё есть (в пакете deprecated) и его можно включать в настройках.
